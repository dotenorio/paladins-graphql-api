type Query {
  ping: String!
  createSession: String!
  testSession(sessionId: String): String!
  getHirezServerStatus(sessionId: String): [HirezServerStatus!]!
  getDataUsed(sessionId: String): DataUsed!
  getDemoDetails(sessionId: String, matchId: Int!): DemoDetails!
  getEsportsProLeagueDetails(sessionId: String): [EsportsProLeagueDetails!]!
  getFriends(sessionId: String, player: String!): [Friends!]!
  getPlayer(sessionId: String, player: String!): Player!
}

type Player {
  ActivePlayerId: Int!
  Created_Datetime: String
  HoursPlayed: Int!
  Id: Int!
  Last_Login_Datetime: String,
  Leaves: Int!
  Level: Int!
  Losses: Int!
  MasteryLevel: Int!
  MergedPlayers: String
  Name: String,
  Personal_Status_Message: String,
  Platform: String,
  RankedConquest: Ranked
  RankedController: Ranked
  RankedKBM: Ranked
  Region: String
  TeamId: String!
  Team_Name: String
  Tier_Conquest: Int!
  Tier_Conquest_Label: String
  Tier_RankedController: Int!
  Tier_RankedController_Label: String
  Tier_RankedKBM: Int!
  Tier_RankedKBM_Label: String
  Total_Achievements: Int!
  Total_Worshippers: Int!
  Wins: Int!
  hz_gamer_tag: String,
  hz_player_name: String
  ret_msg: String
}

type Ranked {
  Leaves: Int!
  Losses: Int!
  Name: String!,
  Points: Int!
  PrevRank: Int!
  Rank: Int!
  Season: Int!
  Tier: Int!
  Tier_Label: String!
  Trend: Int!
  Wins: Int!
  player_id: String,
  ret_msg: String
}

type HirezServerStatus {
  entry_datetime: String
  environment: String
  limited_access: Boolean!,
  platform: String,
  ret_msg: String,
  status: String,
  version: String
}

type DataUsed {
  Active_Sessions: Int!
  Concurrent_Sessions: Int!
  Request_Limit_Daily: Int!
  Session_Cap: Int!
  Session_Time_Limit: Int!
  Total_Requests_Today: Int!
  Total_Sessions_Today: Int!
  ret_msg: String
}

type DemoDetails {
  BanId1: Int!
  BanId2: Int!
  BanId3: Int!
  BanId4: Int!
  Entry_Datetime: String
  Match: Int!
  Match_Time: Int!
  Offline_Spectators: Int!
  Queue: String
  Realtime_Spectators: Int!
  Recording_Ended: String
  Recording_Started: String
  Team1_AvgLevel: Int!
  Team1_Gold: Int!
  Team1_Kills: Int!
  Team1_Score: Int!
  Team2_AvgLevel: Int!
  Team2_Gold: Int!
  Team2_Kills: Int!
  Team2_Score: Int!
  Winning_Team: Int!
  ret_msg: String  
}

type EsportsProLeagueDetails {
  away_team_clan_id: Int!
  away_team_name: String
  away_team_tagname: String
  home_team_clan_id: Int!
  home_team_name: String
  home_team_tagname: String
  map_instance_id: String
  match_date: String
  match_number: String
  match_status: String
  matchup_id: String
  region: String
  ret_msg: String
  tournament_name: String
  winning_team_clan_id: Int!  
}

type Friends {
  account_id: String
  name: String
  player_id: String
  ret_msg: String  
}